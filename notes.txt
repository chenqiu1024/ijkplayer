视频：

ff_ffplay.c:
1.1 解码图像帧数据回调：
    VTDecoderCallback -> QueuePicture -> ffp_queue_picture -> queue_picture：
    1.1.1 创建图像帧：-> alloc_picture:
        SDL_VoutSetOverlayFormat(ffp->vout, ffp->overlay_format);
        vp->bmp = SDL_Vout_CreateOverlay(vp->width, vp->height,  frame_format,  ffp->vout);
        实现于：(ffp->)vout->create_overlay

    1.1.2 填充图像帧数据：-> SDL_VoutFillFrameYUVOverlay
        实现于：overlay->func_fill_frame
        最终来自：ijksdl_vout_overlay_videotoolbox.m 或 ijksdl_vout_overlay_ffmpeg.c

1.2 显示图像帧数据回调：
    video_refresh_thread -> video_refresh -> video_display2 -> video_image_display2 :
        vp = frame_queue_peek_last(&is->pictq);
        …
        SDL_VoutDisplayYUVOverlay(ffp->vout, vp->bmp);
        实现于：(ffp->)vout->display_overlay

最终具体实现于：ijksdl_vout_ios_gles2.m, 自定义实现就是要替换它

而设置实现为它是在ijkplayer_ios.m -> ijkmp_ios_create:
    mp->ffplayer->vout = SDL_VoutIos_CreateForGLES2();

    调用自：IJKFFMoviePlayerController.m:
        _mediaPlayer = ijkmp_ios_create(media_player_msg_loop);

    IJKSDLGLView.m :

    ijkplayer.c

音频：
ijkplayer_ios.m -> ijkmp_ios_create:
    mp->ffplayer->pipeline = ffpipeline_create_from_ios(mp->ffplayer);
    -> SDL_AoutIos_CreateForAudioUnit()
    ijksdl_aout_ios_audiounit.m

    IJKFFMoviePlayerController prepareToPlay -> ijkmp_prepare_async_l() -> ffp_prepare_async_l() -> ffpipeline_open_audio_output()

    IJKSDLAudioQueueController.m :
        IJKSDLAudioQueueOuptutCallback()
